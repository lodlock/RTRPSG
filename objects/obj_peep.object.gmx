<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scr_peep_init()

target = noone;
foe = -1;
team = 0;

state = 'idle';
spd = 3;
acc = 0.5;

selected = false;
superselected = false;
selectorAngle = 0;


// inventory stuff
inventory = ds_grid_create(10,22);

for ( var dis = 0; dis &lt; ds_grid_width(inventory ); dis +=1) {
    for ( var itm = 0; itm &lt; ds_grid_height( inventory ); itm +=1 ) {
        inventory[# dis, itm] = noone;
    }
}






///Fire Up The Brain
alarm[0] = irandom_range( 120, 240 );
alarm[1] = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Working

if ( instance_exists( target ) ) {
    //if its my target // if its a resource
    if ( object_get_name(object_get_parent(target.object_index)) = 'obj_resource' ) {
        //Harvest Wood
        if ( target.bounty &gt; 0 ) {
            target.bounty -=1
            alarm[1]=120
        } else {
            //Place Wood in my inventory
            for ( var i = 6; i &lt; 17; i+=1 ) {
                if ( inventory[# 0, i] = noone ) {
                    //May need a script for this.. so it can be cleaned up
                    //Find out what I just harvested
                    if ( object_get_name(target.object_index) = 'obj_tree' ) { 
                        var temp = asset_get_index('obj_wood_material');  
                    }
                    if ( object_get_name(target.object_index) = 'obj_stone' ) { 
                        var temp = asset_get_index('obj_rock_material');  
                    }
                    inventory[# 0, i] = temp; 
                    with( target ) {
                        instance_destroy();
                    }
                    alarm[1]=0
                    target = noone;
                    state = 'idle'
                    break;   
                } 
            }
        } 
    } else if ( object_get_name(object_get_parent(target.object_index)) = 'obj_tool' ) {
        //Add "Work" to tool
        if ( target.work &lt; 5 ) {
            target.work +=1
            alarm[1]=120
        } else {

        } 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start of AI Brain Tick

//Arm Myself - If I dont have a weapon, I need to find one
if ( inventory[# 0, 5] = noone ) {
    if ( instance_exists( obj_weapons ) ) {
        var temp = instance_nearest( x, y, obj_weapons );
        if ( point_distance( x, y, temp.x, temp.y ) &lt;= 512 &amp;&amp; target = noone) {
            target = instance_nearest( x, y, obj_weapons );
            state = 'move'
        }
    }
}

alarm[0] = 180;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set My Depth, handle drag-select, execute states
depth=-y

if ( global.select_multi == true &amp;&amp; team == 0 ) {
    if ( distance_to_point(global.start_x,global.start_y) &lt;= 1024 ) {
        var check;
        check = rectangle_in_rectangle( bbox_left, bbox_top, bbox_right, bbox_bottom, global.start_x, global.start_y, global.end_x, global.end_y );
        if ( check != 0 ) {
            selected = true;
        }
        else {
            if ( !keyboard_check(vk_shift) ) {
                selected = false;
            }
        }
    }  
}

if ( selected == true ) {
    selectorAngle += 4;
}


if ( state == 'harvesting' ) {
}
if ( state == 'move' ) {
    scr_peep_move();
}

if ( target = noone || state == 'idle' ) {
    scr_peep_idle();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_resource">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interact With Resource

if ( instance_exists( target ) ) {
    //if its my target // if its a resource
    if ( other.id = target.id &amp;&amp; object_get_name(object_get_parent(target.object_index)) = 'obj_resource' &amp;&amp; state != 'harvesting') {
        //Arrived At resource: start harvesting
        alarm[1]=120
        state = 'harvesting'
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tool">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( instance_exists( target ) ) {
    //if its my target // if its a tool
    if ( other.id = target.id &amp;&amp; object_get_name(object_get_parent(target.object_index)) = 'obj_tool' &amp;&amp; state != 'working') {
        //Arrived At resource: start working
        alarm[1]=120
        state = 'working'
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_item">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interact With Items

if ( instance_exists( target ) ) {
    //if its my target // if its an item
    if ( other.id = target.id &amp;&amp; object_get_name(object_get_parent(target.object_index)) = 'obj_item' ) {
            //If I dont have this equipment already...
            if ( inventory[# 0, target.type] = noone ) {
                inventory[# 0, target.type] = target.object_index;
                    with ( target ) {
                        instance_destroy();
                    }
                    target = noone;
                    state = 'idle'
            } else {
                //...Scour for the first free slot in the main inventory
                for ( var i = 6; i &lt; 17; i+=1 ) {
                    if ( inventory[# 0, i] = noone ) {
                        inventory[# 0, i] = target.object_index; 
                        with( target ) {
                            instance_destroy();
                        }
                        target = noone;
                        state = 'idle'
                        break;   
                    }
                }
            }
        } 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_peep">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide away

motion_add(point_direction(other.x, other.y, x, y), 0.25);
if (speed &gt; spd) {
    speed = spd;
}

//Check for overlapping
if ( x == other.x &amp;&amp; y == other.y ) {
    if ( id &gt; other.id ) {
        x+=1;
    } else {
        x-=1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_goto">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interact With Goto Object

//Doublecheck it still exists
if ( instance_exists( target ) ) {
    //Is it my target?
    if ( other.id = target.id ) {
        //Destroy it
        with ( target ) {
            instance_destroy();
        }
        target = noone;
        state = 'idle'
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( selected == true ) {
    if ( team = 0 ) {
        draw_sprite_ext(spr_selected, 0, x, y, 1, 1, selectorAngle, c_white, 0.75);
    }
    else {
        draw_sprite_ext(spr_selected, 0, x, y, 1, 1, selectorAngle, c_red, 0.75);
    }
    
}


draw_self();

if ( inventory[# 0, 0] != noone ) {
    draw_background_part(bg_0,0,0,32,32,x-16,y-24);    
}
if ( inventory[# 0, 1] != noone ) {
    draw_background_part(bg_02,0,0,32,32,x-16,y-24);    
}
if ( inventory[# 0, 2] != noone ) {
    draw_background_part(bg_0,0,0,32,32,x-16,y-24);    
}
if ( inventory[# 0, 3] != noone ) {
    draw_background_part(bg_0,0,0,32,32,x-16,y-24);    
}
if ( inventory[# 0, 4] != noone ) {
    draw_background_part(bg_0,0,0,32,32,x-16,y-24);    
}
if ( inventory[# 0, 5] != noone ) {
    draw_background_part(bg_0,0,0,32,32,x-16,y-24)   
}

draw_text(x, y-32, string(alarm[1]));
draw_text(x, y-48, state);
draw_text(x, y-64, string(target));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
